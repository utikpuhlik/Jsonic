name: Build and Test Jsonic Parser
env:
  APPLICATION_NAME: "JsonicParser"
  PACKAGE_NAME: "jsonic-version-${{ github.sha }}"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v3
        ### Only for PRIVATE Repos ###
        with:
           token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Install poetry && Packages
        run: pip install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      - run: |
          POETRY_VIRTUALENVS_CREATE=false
          poetry install
          echo "Package version: "${{ env.PACKAGE_NAME }}
      # TODO: - run: poetry run pytest


  # test-python-app:
  #   needs: Install
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Code checkout
  #       uses: actions/checkout@v3
  #       with:
  #          token: ${{ secrets.WORKFLOW_TOKEN }}

  #     - name: Run tests
  #       run: |
  #         npm rebuild node-sass --force
  #         npm run test -- --colors

  Deploy:
    # TODO: needs: [Install, test-python-app]
    needs: [Install]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v3
        ### Only for PRIVATE Repos ###
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Play ansible-playbook command with SSH Private Key
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: ansible-playbook -i ~/ansible/host.ini ~/ansible/jsonic_deploy.yml --vault-password-file ~/ansible/vault_pass.txt
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.PRIVATE_KEY }}
        env:
          CI: true
