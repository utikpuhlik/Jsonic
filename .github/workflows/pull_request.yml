name: Python Code Analysis

on:
  pull_request:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
        with:
           token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction

      - name: Run pre-commit checks
        run: |
          source .venv/bin/activate
          pre-commit run --all-files --show-diff-on-failure
      - name: Check if files were modified
        id: check_diff
        run: echo ::set-output name=diff::$(git diff --name-only --exit-code HEAD || echo "MODIFIED")
      - name: Fail if pre-commit checks fail
        run: exit $(test "${{ steps.check_diff.outputs.diff }}" != "MODIFIED")

  # pytest:
  #   runs-on: ubuntu-latest
  #   needs: pre-commit
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install dependencies
  #       run: pip install poetry
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'
  #         cache: 'poetry'
  #     - run: |
  #         POETRY_VIRTUALENVS_CREATE=false
  #         poetry install
  #     - name: Run tests
  #       run: pytest tests/
